name: CI/CD Pipeline

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['main', 'deploy']

  push:
    branches: ['main', 'deploy']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Check if changes were made
        id: changes
        run: |
          echo "::set-output name=changed::$(git diff-index --quiet HEAD -- || echo "true")"

      - name: Commit and Push Changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions@example.com"
          git config --local user.name "GitHub Actions"
          git diff-index --quiet HEAD || git commit -am "Apply pre-commit auto-fixes"
          git push

  angular_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install modules
        run: yarn install
      - name: Run ESLint
        run: yarn run eslint . --ext .js,.jsx,.ts,.tsx
      - name: Run tests
        run: yarn test

  django_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: python manage.py test

  deploy:
    needs: [linter, angular_tests, django_tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/your-backend:${{ github.sha }}

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          yarn build

      - name: Install AWS CLI
        uses: busha/aws-cli-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Frontend to S3
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          aws s3 sync ./frontend/dist s3://${S3_BUCKET_NAME} --delete

      - name: Notify Deployment Success
        if: always()
        run: echo "âœ… Deployment completed"
